#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Nov 08, 2019 05:37:31 AM +0330  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import GUI_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    GUI_support.set_Tk_var()
    top = OCT (root)
    GUI_support.init(root, top)
    root.mainloop()

w = None
def create_OCT(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    rt = root
    w = tk.Toplevel (root)
    GUI_support.set_Tk_var()
    top = OCT (w)
    GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_OCT():
    global w
    w.destroy()
    w = None

class OCT:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("960x896+167+89")
        top.minsize(1, 1)
        top.maxsize(1265, 994)
        top.resizable(1, 1)
        top.title("OCT ")
        top.configure(highlightcolor="black")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=1.089
                , relwidth=0.929)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Control",compound="left",underline="-1",)
        self.TNotebook1_t0.configure(background="#126c87")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Signal",compound="left",underline="-1",)
        self.TNotebook1_t1.configure(background="#093542")

        self.TLabelframe1 = ttk.Labelframe(self.TNotebook1_t0)
        self.TLabelframe1.place(relx=0.022, rely=0.042, relheight=0.311
                , relwidth=0.292)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''SLD Power''')

        self.Label1 = tk.Label(self.TLabelframe1)
        self.Label1.place(relx=-0.038, rely=0.068, height=281, width=279
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/POWER.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''Label''')

        self.TLabelframe1 = ttk.Labelframe(self.TNotebook1_t0)
        self.TLabelframe1.place(relx=0.36, rely=0.042, relheight=0.311
                , relwidth=0.292)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''SLD Temperature''')

        self.Label1 = tk.Label(self.TLabelframe1)
        self.Label1.place(relx=-0.038, rely=0.068, height=281, width=279
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/temperature.png")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img1)
        self.Label1.configure(text='''Label''')

        self.TLabelframe1 = ttk.Labelframe(self.TLabelframe1)
        self.TLabelframe1.place(relx=1.565, rely=0.681, relheight=1.0
                , relwidth=1.0, bordermode='ignore')
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''Tlabelframe''')

        self.Label1 = tk.Label(self.TLabelframe1)
        self.Label1.place(relx=-0.038, rely=0.068, height=281, width=279
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/POWER.png")
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img2)
        self.Label1.configure(text='''Label''')

        self.TLabelframe1 = ttk.Labelframe(self.TNotebook1_t0)
        self.TLabelframe1.place(relx=0.697, rely=0.042, relheight=0.311
                , relwidth=0.292)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''Patinet''')

        self.Label1 = tk.Label(self.TLabelframe1)
        self.Label1.place(relx=-0.038, rely=0.068, height=281, width=279
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/patient.png")
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img3)
        self.Label1.configure(text='''Label''')

        self.TSeparator2 = ttk.Separator(self.TNotebook1_t0)
        self.TSeparator2.place(relx=0.337, rely=0.053, relheight=0.484)
        self.TSeparator2.configure(orient="vertical")

        self.TSeparator2 = ttk.Separator(self.TNotebook1_t0)
        self.TSeparator2.place(relx=0.674, rely=0.053, relheight=0.484)
        self.TSeparator2.configure(orient="vertical")

        self.Checkbutton1 = tk.Checkbutton(self.TNotebook1_t0)
        self.Checkbutton1.place(relx=0.36, rely=0.379, relheight=0.029
                , relwidth=0.229)
        self.Checkbutton1.configure(activebackground="#f9f9f9")
        self.Checkbutton1.configure(background="#126c87")
        self.Checkbutton1.configure(font="-family {DejaVu Sans} -size 13")
        self.Checkbutton1.configure(foreground="#ffffff")
        self.Checkbutton1.configure(highlightbackground="#126c87")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Turn on PID control''')
        self.Checkbutton1.configure(variable=GUI_support.che50)

        self.TScale1 = ttk.Scale(self.TNotebook1_t0, from_=0, to=1.0)
        self.TScale1.place(relx=0.539, rely=0.463, relwidth=0.112, relheight=0.0
                , height=17, bordermode='ignore')
        self.TScale1.configure(takefocus="")

        self.Label2 = tk.Label(self.TNotebook1_t0)
        self.Label2.place(relx=0.348, rely=0.463, height=21, width=119)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(background="#126c87")
        self.Label2.configure(font="-family {DejaVu Sans} -size 12")
        self.Label2.configure(foreground="#ffffff")
        self.Label2.configure(justify='left')
        self.Label2.configure(text='''Sensetivitu''')

        self.Label3 = tk.Label(self.TNotebook1_t0)
        self.Label3.place(relx=0.685, rely=0.484, height=21, width=79)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(background="#126c87")
        self.Label3.configure(font="-family {DejaVu Sans} -size 12")
        self.Label3.configure(foreground="#ffffff")
        self.Label3.configure(text='''Status''')

        self.Label4 = tk.Label(self.TNotebook1_t0)
        self.Label4.place(relx=0.775, rely=0.411, height=91, width=189)
        self.Label4.configure(activebackground="#ffffff")
        self.Label4.configure(anchor='nw')
        self.Label4.configure(background="#ffffff")
        self.Label4.configure(justify='left')
        self.Label4.configure(text='''No patinet is detected ...
Low signal ...
Device is not ready to use ...''')

        self.Label5 = tk.Label(self.TNotebook1_t0)
        self.Label5.place(relx=0.680, rely=0.389, height=91, width=79)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(background="#126c87")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/person.png")
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.Label5.configure(image=_img4)
        self.Label5.configure(text='''Label''')

        self.Button1 = tk.Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.36, rely=0.505, height=31, width=48)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''ON''')

        self.Button2 = tk.Button(self.TNotebook1_t0)
        self.Button2.place(relx=0.584, rely=0.505, height=31, width=54)
        self.Button2.configure(activebackground="#f9f9f9")
        self.Button2.configure(text='''OFF''')

        self.Entry1 = tk.Entry(self.TNotebook1_t0)
        self.Entry1.place(relx=0.528, rely=0.421,height=22, relwidth=0.119)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="#c4c4c4")

        self.Checkbutton3 = tk.Checkbutton(self.TNotebook1_t0)
        self.Checkbutton3.place(relx=0.011, rely=0.379, relheight=0.024
                , relwidth=0.212)
        self.Checkbutton3.configure(activebackground="#f9f9f9")
        self.Checkbutton3.configure(background="#126c87")
        self.Checkbutton3.configure(foreground="#ffffff")
        self.Checkbutton3.configure(highlightbackground="#126c87")
        self.Checkbutton3.configure(justify='left')
        self.Checkbutton3.configure(text='''Turn on Smart Protection''')
        self.Checkbutton3.configure(variable=GUI_support.che61)

        self.Button3 = tk.Button(self.TNotebook1_t0)
        self.Button3.place(relx=0.135, rely=0.411, height=31, width=48)
        self.Button3.configure(activebackground="#f9f9f9")
        self.Button3.configure(text='''ON''')

        self.Button4 = tk.Button(self.TNotebook1_t0)
        self.Button4.place(relx=0.27, rely=0.411, height=31, width=54)
        self.Button4.configure(activebackground="#f9f9f9")
        self.Button4.configure(text='''OFF''')

        self.Label6 = tk.Label(self.TNotebook1_t0)
        self.Label6.place(relx=0.135, rely=0.453, height=101, width=169)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(anchor='nw')
        self.Label6.configure(background="#ffffff")
        self.Label6.configure(font="-family {DejaVu Sans} -size 9")
        self.Label6.configure(justify='left')
        self.Label6.configure(text='''SLD is Now off ...
-------------------------
The Sample graph is 
loaded on the canvas ...
'./OCT/Powe_graph.png''')

        self.Label7 = tk.Label(self.TNotebook1_t0)
        self.Label7.place(relx=0.000, rely=0.6, height=131, width=149)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(background="#126c87")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/sensor_status.png")
        global _img5
        _img5 = tk.PhotoImage(file=photo_location)
        self.Label7.configure(image=_img5)
        self.Label7.configure(text='''Label''')

        self.Label8 = tk.Label(self.TNotebook1_t0)
        self.Label8.place(relx=0.135, rely=0.589, height=201, width=549) #202
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(anchor='nw')
        self.Label8.configure(background="#ffffff")
        self.Label8.configure(justify='left')
        self.Label8.configure(text='''Cooling system is connected.
Fan is connected.

---------------------------
searching for digital ports ./
I2C connection is stablished ...
three sensors are detected ...

detected sensores: temp12h3, power32dexc, obj32e
---------------------------
No data from sensors ...
please turn on the sensors ...
please turn on the sensors ...Label''')

        self.TSeparator3 = ttk.Separator(self.TNotebook1_t0)
        self.TSeparator3.place(relx=0.135, rely=0.579, relwidth=0.764)

        self.Label10 = tk.Label(self.TNotebook1_t0)
        self.Label10.place(relx=0.36, rely=0.421, height=21, width=129)
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(background="#126c87")
        self.Label10.configure(font="-family {DejaVu Sans} -size 12")
        self.Label10.configure(foreground="#ffffff")
        self.Label10.configure(justify='left')
        self.Label10.configure(text='''Temp set point''')

        self.Label11 = tk.Label(self.TNotebook1_t0)
        self.Label11.place(relx=0.022, rely=0.453, height=51, width=69)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(background="#126c87")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/power_status.png")
        global _img6
        _img6 = tk.PhotoImage(file=photo_location)
        self.Label11.configure(image=_img6)
        self.Label11.configure(text='''Label''')

        self.Label13 = tk.Label(self.TNotebook1_t0)
        self.Label13.place(relx=0.011, rely=0.526, height=22, width=101)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(background="#126c87")
        self.Label13.configure(font="-family {DejaVu Sans} -size 11")
        self.Label13.configure(foreground="#ffffff")
        self.Label13.configure(text='''Power Status''')

        self.Labelframe1 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe1.place(relx=0.022, rely=0.021, relheight=0.447
                , relwidth=0.461)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(font="-family {DejaVu Sans} -size 14")
        self.Labelframe1.configure(foreground="#ffffff")
        self.Labelframe1.configure(text='''Raw Image''')
        self.Labelframe1.configure(background="#253449")
        self.Labelframe1.configure(highlightbackground="#253449")

        self.Label9 = tk.Label(self.Labelframe1)
        self.Label9.place(relx=0.024, rely=0.071, height=381, width=389
                , bordermode='ignore')
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(background="#253449")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/retin.png")
        global _img7
        _img7 = tk.PhotoImage(file=photo_location)
        self.Label9.configure(image=_img7)
        self.Label9.configure(text='''Label''')

        self.Labelframe1 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe1.place(relx=0.022, rely=0.568, relheight=0.226
                , relwidth=0.584)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(font="-family {DejaVu Sans} -size 14")
        self.Labelframe1.configure(foreground="#ffffff")
        self.Labelframe1.configure(text='''Proccessed Image''')
        self.Labelframe1.configure(background="#253449")
        self.Labelframe1.configure(highlightbackground="#ffffff")
        self.Labelframe1.configure(highlightcolor="#ffffff")

        self.Label14 = tk.Label(self.Labelframe1)
        self.Label14.place(relx=0.019, rely=0.14, height=171, width=489
                , bordermode='ignore')
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(background="#253449")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/OCT2.png")
        global _img8
        _img8 = tk.PhotoImage(file=photo_location)
        self.Label14.configure(image=_img8)
        self.Label14.configure(text='''Label''')

        self.Labelframe2 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe2.place(relx=0.528, rely=0.032, relheight=0.3
                , relwidth=0.449)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(font="-family {DejaVu Sans} -size 14")
        self.Labelframe2.configure(foreground="#ffffff")
        self.Labelframe2.configure(text='''FFT Signal''')
        self.Labelframe2.configure(background="#093542")
        self.Labelframe2.configure(highlightcolor="#ffffff")
        
        #self.TSeparator1 = ttk.Separator(self.TNotebook1_t1)
        #self.TSeparator1.place(relx=0.506, rely=0.032, relheight=450.0)
        #self.TSeparator1.configure(orient="vertical")
        
        #self.TSeparator4 = ttk.Separator(self.TNotebook1_t1)
        #self.TSeparator4.place(relx=0.067, rely=0.516, relwidth=780.0)
        #self.TSeparator4.configure(orient="vertical")
        

###################################
        self.Label15 = tk.Label(self.Labelframe2)
        self.Label15.place(relx=0.025, rely=0.175, height=221, width=379
                , bordermode='ignore')
        self.Label15.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/fftoct.png")
        global _img9
        _img9 = tk.PhotoImage(file=photo_location)
        self.Label15.configure(image=_img9)
        self.Label15.configure(text='''Label''')
###################################
        
        self.Button7 = tk.Button(self.TNotebook1_t1)
        self.Button7.place(relx=0.685, rely=0.653, height=56, width=56)
        self.Button7.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/left.png")
        global _img14
        _img14 = tk.PhotoImage(file=photo_location)
        self.Button7.configure(image=_img14)
        self.Button7.configure(text='''Button''')
        
        self.Button8 = tk.Button(self.TNotebook1_t1)
        self.Button8.place(relx=0.753, rely=0.716, height=56, width=56)
        self.Button8.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/down.png")
        global _img12
        _img12 = tk.PhotoImage(file=photo_location)
        self.Button8.configure(image=_img12)
        self.Button8.configure(text='Button')

    
        self.Button5 = tk.Button(self.TNotebook1_t1)
        self.Button5.place(relx=0.82, rely=0.653, height=56, width=56)
        self.Button5.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/right.png")
        global _img10
        _img10 = tk.PhotoImage(file=photo_location)
        self.Button5.configure(image=_img10)
        self.Button5.configure(text='''Button''')
        

        self.Button6 = tk.Button(self.TNotebook1_t1)
        self.Button6.place(relx=0.753, rely=0.589, height=56, width=56)
        self.Button6.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/up.png")
        global _img11
        _img11 = tk.PhotoImage(file=photo_location)
        self.Button6.configure(image=_img11)
        self.Button6.configure(text='''Button''')

        

        self.Button9 = tk.Button(self.TNotebook1_t1)
        self.Button9.place(relx=0.753, rely=0.653, height=56, width=56)
        self.Button9.configure(activebackground="#f9f9f9")
        photo_location = os.path.join(prog_location,"/home/pi/OCT/OCT_GUI/zoom.png")
        global _img13
        _img13 = tk.PhotoImage(file=photo_location)
        self.Button9.configure(image=_img13)
        self.Button9.configure(text='''Button''')

        #self.TSeparator5 = ttk.Separator(self.TNotebook1_t1)
        #self.TSeparator5.place(relx=0.629, rely=0.558, relheight=330.0)
        #self.TSeparator5.configure(orient="vertical")

        self.Radiobutton1 = tk.Radiobutton(self.TNotebook1_t1)
        self.Radiobutton1.place(relx=0.652, rely=0.832, relheight=0.029
                , relwidth=0.154)
        self.Radiobutton1.configure(activebackground="#f9f9f9")
        self.Radiobutton1.configure(background="#093542")
        self.Radiobutton1.configure(font="-family {DejaVu Sans} -size 13")
        self.Radiobutton1.configure(foreground="#ffffff")
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(text='''Raw Image''')
        self.Radiobutton1.configure(variable=GUI_support.selectedButton)

        self.Radiobutton2 = tk.Radiobutton(self.TNotebook1_t1)
        self.Radiobutton2.place(relx=0.652, rely=0.874, relheight=0.029
                , relwidth=0.153)
        self.Radiobutton2.configure(activebackground="#f9f9f9")
        self.Radiobutton2.configure(background="#093542")
        self.Radiobutton2.configure(font="-family {DejaVu Sans} -size 13")
        self.Radiobutton2.configure(foreground="#ffffff")
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''Raw Signal''')
        self.Radiobutton2.configure(variable=GUI_support.selectedButton)

        self.Radiobutton3 = tk.Radiobutton(self.TNotebook1_t1)
        self.Radiobutton3.place(relx=0.652, rely=0.789, relheight=0.029
                , relwidth=0.212)
        self.Radiobutton3.configure(activebackground="#f9f9f9")
        self.Radiobutton3.configure(background="#093542")
        self.Radiobutton3.configure(font="-family {DejaVu Sans} -size 13")
        self.Radiobutton3.configure(foreground="#ffffff")
        self.Radiobutton3.configure(justify='left')
        self.Radiobutton3.configure(text='''Processed Image''')
        self.Radiobutton3.configure(variable=GUI_support.selectedButton)

       

        self.Label12 = tk.Label(self.TNotebook1_t1)
        self.Label12.place(relx=0.64, rely=0.537, height=21, width=129)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(anchor='nw')
        self.Label12.configure(background="#093542")
        self.Label12.configure(font="-family {DejaVu Sans} -size 14")
        self.Label12.configure(foreground="#ffffff")
        self.Label12.configure(justify='left')
        self.Label12.configure(text='''Control Box''')

if __name__ == '__main__':
    vp_start_gui()





